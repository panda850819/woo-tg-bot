// ÂºïÂÖ•Â§ñÈÉ®Â•ó‰ª∂
const TelegramBot = require('node-telegram-bot-api');
const token = '1929321227:AAHgSVSe0as2RcSnU9TlHt32QbcDJKS-hXw'; // TODO:Ë´ãÊõ¥Êîπ
const bot = new TelegramBot(token, { polling: true });

// bot text 
var socialmedia = 'ÊâãÂàÄÂä†ÂÖ• WOO Network Âè∞ÁÅ£Á§æÁæ§Â™íÈ´îÔºå‰∏çÈåØÈÅé‰ªª‰Ωï‰∏ÄÂâáÁ≤æÂΩ©Ê∂àÊÅØËàáÊ¥ªÂãïÔºÅ\n\n ‚ö°Ô∏è FacebookÔºöÂÆòÊñπÊ∂àÊÅØ„ÄÅ‰∏çÂÆöÊôÇÂ•ΩÂ∫∑Ê¥ªÂãï \n ‚ö°Ô∏è TwitterÔºöÂÆòÊñπÊ∂àÊÅØ„ÄÅË≥áË®äË®éË´ñ‰∫íÂãï \n ‚ö°Ô∏è MediumÔºöÁî¢Ê•≠Ë∂®Âã¢Ê∂àÊÅØ„ÄÅÁßëÊôÆÊá∂‰∫∫ÂåÖ \n ‚ö°Ô∏è LINEÔºöË≥áË®äË®éË´ñ‰∫íÂãï'
var faq = '‰∏çÁÆ°‰Ω†ÊòØ KYC ÊàñÊòØÂú∞ÂùÄË≠âÊòé ..Á≠âÔºåÂ§ßÂ∞èÁñëÈõ£ÈõúÁóáÊ≠°ËøéÊäï‰ø°Ëá≥ \n\n support@woo.network'
var woox = '‰ΩéËá≥Èõ∂ÊâãÁ∫åË≤ª‰∫§ÊòìÊâÄ - WOO X'
var woonetwork = 'https://medium.com/@WOONetwork.tw/%E9%99%A4%E4%BA%86%E8%B3%AA%E6%8A%BC-%E6%8C%81%E6%9C%89-woo-%E9%82%84%E6%9C%89%E9%80%99%E9%BA%BC%E5%A4%9A%E7%9A%84%E7%8D%B2%E7%9B%8A%E5%A0%B4%E6%99%AF-c4c5aa04ef33'
var poa = 'üìå[ WOO X ÈóúÊñºÂè∞ÁÅ£Âú∞ÂçÄÁî®Êà∂ÈúÄÂÆåÊàêË∫´ÂàÜË™çË≠âÂÖ¨Âëä ] \n\n WOO X Â∑≤Êñº 6 Êúà 17 Ëôü‰∏äÁ∑öË∫´ÂàÜË™çË≠âÂäüËÉΩÔºåÊ†πÊìöÊ≥ïË¶è WOO X Â∞áË¶ÅÊ±ÇÂè∞ÁÅ£Âú∞ÂçÄÁöÑÁî®Êà∂ÂÆåÊàêË∫´ÂàÜË™çË≠â„ÄÇËã•Âè∞ÁÅ£Áî®Êà∂Êñº7Êúà1ËôüÊú™ÂÆåÊàêË∫´ÂàÜË™çË≠âÔºåÂ∞áÊúÉË¢´ÈôêÂà∂‰∫§Êòì„ÄÅË≥™ÊäºÂèäÂÖÖÊèêÈ†òÁ≠âÊúçÂãô„ÄÇÁÇ∫‰∫´ÊúâÂ∏≥Êà∂Ê¨äÁõäÔºåÊèêÈÜíÊúâË®ªÂÜäWOO XÁöÑÁî®Êà∂Âç≥Êó©ÂÆåÊàê‰∏¶ÈÄöÈÅéË∫´ÂàÜË™çË≠âÔºÅ\n\n\ üîé Ë∫´ÂàÜÈ©óË≠âÊ≥®ÊÑè‰∫ãÈ†ÖÔºö\n\n 1) ÂÉÖÊé•ÂèóËã±ÊñáË≥áÊñô \n\n 2) Ë∫´ÂàÜË™çË≠âÂÉÖÊé•ÂèóË≠∑ÁÖß \n\n 3) Âú∞ÂùÄË≠âÊòéÂèØÊèê‰∫§‰∏≠ÊñáÁâàÊú¨ÊàñË∫´ÂàÜË≠âÊ≠£ÂèçÈù¢ÔºàË´ãÂú®Ë≠âÊòé‰∏≠ÈôÑ‰∏äËã±ÊñáÁöÑ Legal Name Ôºå‰ª•‰æõ AML ÂúòÈöäÈÄ≤Ë°åÊ†∏Â∞çÔºâ \n\n 4) ÈóúÊñºË∫´ÂàÜË™çË≠âÂ∏∏Ë¶ãÂïèÁ≠îËàáÊµÅÁ®ãÔºöhttps://support.woo.org/hc/en-001/articles/4405873990681--Individual-Account-KYC-Introduction \n\n Ëã•Ë∫´ÂàÜË™çË≠â‰∏äÊúâ‰ªª‰ΩïÂïèÈ°åÔºåË´ãÂÇ≥ÈÄÅËá≥support@woo.networkÔºåÊàëÂÄëÂ∞áÁõ°Âø´ÁÇ∫ÊÇ®ËôïÁêÜ„ÄÇ\n\n ÊÑüË¨ùÊÇ®Â∞ç WOO XÁöÑÊîØÊåÅ! \n\n WOO X Team \n\n'
var kyc = 'üìå[ WOO X ÈóúÊñºÂè∞ÁÅ£Âú∞ÂçÄÁî®Êà∂ÈúÄÂÆåÊàêË∫´ÂàÜË™çË≠âÂÖ¨Âëä ] \n\n WOO X ÁöÑË∫´‰ªΩË™çË≠âÈúÄË¶ÅÊ∫ñÂÇôË≠∑ÁÖß‰∏¶ÊåâÁÖß‰∏ãÊñπÁöÑÂúñ‰ΩøÁî®„ÄåËã±Ë™û„ÄçÈÄêË°åÂ°´ÂØ´ \n\n Á¨¨‰∏ÄÈÉ®ÂàÜ Legal Name ÁÇ∫Áî®Êà∂‰πãËã±ÊñáÂßìÂêçÔºåFirst Name ÁÇ∫ÂêçÂ≠ó, Last Name ÁÇ∫ÂßìÊ∞è \n\n Curreny Address ÁÇ∫Â±Ö‰ΩèÂú∞ÊàñÊÇ®ÁöÑË∫´ÂàÜË≠â‰∏äÁöÑÂú∞ÂùÄ, Country/Region Ë´ãÂ°´ÂØ´ Taiwan , State ‰πüË´ãÂ°´ÂØ´ Taiwan , City Ë´ãÂ°´ÂØ´ÁõÆÂâçÁöÑÂ±Ö‰ΩèÂüéÂ∏ÇÊàñË∫´ÂàÜË≠â‰∏äÁöÑÂüéÂ∏Ç , Ââ©‰∏ãÁöÑË´ãÊåâÁÖß‰∏äÊñπÈúÄÊ±ÇÂ°´ÂØ´ÔºåÊúÄÂæåÊúÉÈÄ≤Ë°å‰∫∫ËáâËæ®Ë≠ò‰ª•ÂèäÊãçÊîùË≠∑ÁÖßÔºåÂç≥ÂèØÂÆåÊàê KYC Level 1 È©óË≠â„ÄÇ'

bot.onText(/\/start@woobot/, (msg) => {
  bot.sendMessage(msg.chat.id, "hello", {
  "reply_markup": {
      "keyboard": [
        [
          {
            text: 'Âä†ÂÖ•Á§æÁæ§',
          }
          , 
          {
            text: 'WOO X',
          }
        ],   
        [
          {
            text: 'ÂÆòÊñπÁ∂≤Á´ô',
          }
          , 
          {
            text: 'Â∏∏Ë¶ãÂïèÈ°å',
          }
        ]   
      ]
      }
  });
  });


/* WOO Network tw reply */
bot.onText(/Âä†ÂÖ•Á§æÁæ§/, (msg, match) => {
    bot.sendMessage(msg.chat.id, socialmedia, {
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        text: "Facebook",
                        url: 'https://www.facebook.com/WOONetwork.tw'
                    },
                    {
                      text: "Twitter",
                      url: 'https://twitter.com/WOOnetwork_CN'
                  },
                ],
                [
                  {
                      text: "Medium",
                      url: 'https://medium.com/@WOONetwork.tw'
                  },
                  {
                    text: "LINE",
                    url: 'https://line.me/ti/g2/5fcFq_yjTQkMcj9YLqdGZQ?utm_source=invitation&utm_medium=link_copy&utm_campaign=default'
                },
              ],
              [
                {
                    text: "ÈªûÊ≠§Áç≤ÂèñÊõ¥Â§öÈÄ£Áµê",
                    url: 'https://linktr.ee/woonetworktw'
                },
            ],
            ],
        },
    });
  });
  
  /* WOO ÂÆòÊñπÁ∂≤Á´ô  reply */
  bot.onText(/ÂÆòÊñπÁ∂≤Á´ô/, (msg, match) => {
    bot.sendMessage(msg.chat.id, "ÊÉ≥‰∫ÜËß£Êõ¥Â§ö WOO Network ‰æÜÁúãÂêßÔºÅ", {
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        text: "ÂÆòÊñπÁ∂≤Á´ô",
                        url: 'https://woo.org/'
                    },
                ],
            ],
        },
    });
  });
  
  bot.onText(/WOO X/, (msg, match) => {
    bot.sendMessage(msg.chat.id, woox, {
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        text: 'ÈªûÊàëË®ªÂÜä WOO X !',
                        url: 'https://x.woo.org/register'
                    },
                ],
            ],
        },
    });
  });
  
  /* Â∏∏Ë¶ãÂïèÈ°å reply */
  bot.onText(/Â∏∏Ë¶ãÂïèÈ°å/, (msg, match) => {
    bot.sendMessage(msg.chat.id, faq, {
        "reply_markup": {
            "inline_keyboard": [
                [
                    {
                        text: 'KYC',
                        callback_data: '/KYC'
                    },
                    {
                      text: 'Âú∞ÂùÄË≠âÊòé',
                      callback_data: '/POA'
                  }
                ],
                [
                  {
                    text: 'WOO Network ÊáâÁî®Â†¥ÊôØ',
                    callback_data: '/WOO_Network',
                  }
                ]
            ],
        },
    });
  });
  
  /* Call Back */
  bot.on('callback_query', function onCallbackQuery(callbackQuery) {
    const action = callbackQuery.data;
    const msg = callbackQuery.message;
    const opts = {
      chat_id: msg.chat.id,
      message_id: msg.message_id,
    };
    let text;
  
    if (action === '/KYC') {
      text = kyc;
      bot.editMessageText(text, opts);
      bot.sendPhoto(msg.chat.id,'https://i.imgur.com/t2RNelO.png')
    }
  
    if (action === '/POA') {
      text = poa;
      bot.editMessageText(text, opts);
    }
  
    if (action === '/WOO_Network') {
      text = woonetwork;
      bot.editMessageText(text, opts);
    }
  });
